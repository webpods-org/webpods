# WebPods CLI Tests - Current Status and Next Steps

## Overview
This document captures the complete state of the CLI test suite implementation as of 2025-08-28. The task is to get all CLI tests passing without modifying the existing server implementation or integration tests.

## Current Status

### Completed Work

1. **Test Framework Setup**
   - Fixed Node.js v22 compatibility issues with Mocha
   - Changed from deprecated `--loader` to `--import=tsx` syntax in `.mocharc.json`
   - Added tsx dependency for TypeScript execution

2. **Path Resolution Fixes**
   - Fixed CLI path from `"../../../webpods-cli/dist/index.js"` to `"../../webpods-cli/dist/index.js"`
   - Corrected test configuration file paths

3. **Logger Output Issues**
   - Added `CLI_SILENT` environment variable support to suppress CLI logging during tests
   - Modified `webpods-cli/src/logger.ts` to respect silent mode

4. **JWT Authentication**
   - Aligned JWT secret between test setup and server ("test-secret-key")
   - Fixed JWT token generation in test-setup.ts

5. **Custom Test Server**
   - Created `CliTestServer` class for isolated test environment
   - Uses port 3456 and database `webpodsdb_cli_test` to avoid conflicts
   - Properly configures all required environment variables

### Current Issues

1. **Server Startup Detection**
   - The server IS starting correctly and emitting "WebPods server started" to stdout
   - The CliTestServer checkStartup function may not be capturing the message correctly
   - Tests are timing out waiting for server startup confirmation

2. **Database Connection Warnings**
   - Tests are creating duplicate database connections
   - Getting warnings about "WARNING: Creating a duplicate database object for the same connection"
   - Need to ensure single database setup/teardown across all test files

3. **Test Execution**
   - CLI authentication tests are failing due to server startup timeout
   - Pod tests haven't been reached yet due to blocking auth test failures

## File Structure

### Modified Files
- `/node/packages/webpods-cli-tests/.mocharc.json` - Fixed Node.js v22 compatibility
- `/node/packages/webpods-cli-tests/package.json` - Added tsx dependency
- `/node/packages/webpods-cli-tests/src/cli-test-helpers.ts` - Fixed CLI path and added silent mode
- `/node/packages/webpods-cli-tests/src/test-setup.ts` - Fixed JWT secret, using CliTestServer
- `/node/packages/webpods-cli-tests/src/cli-test-server.ts` - Created custom test server class
- `/node/packages/webpods-cli/src/logger.ts` - Added CLI_SILENT support

### Test Files
- `/node/packages/webpods-cli-tests/src/cli-auth.test.ts` - Authentication tests (currently failing)
- `/node/packages/webpods-cli-tests/src/cli-pod.test.ts` - Pod management tests (not yet reached)

### Debugging Files Created
- `/node/packages/webpods-cli-tests/test-server-startup.mjs` - Standalone script to test server startup

## Key Findings

1. **Server Startup Message**
   - Server successfully starts and logs: `[INFO] [webpods] WebPods server started`
   - Message is sent to stdout, not stderr
   - Requires LOG_LEVEL="info" or lower to see the message

2. **Test Environment Requirements**
   - Must use separate port (3456) from integration tests (3000)
   - Must use separate database (webpodsdb_cli_test) from integration tests (webpodsdb_test)
   - Must match JWT_SECRET="test-secret-key" with server configuration

3. **Configuration Path**
   - Test config must be at: `/node/packages/webpods-cli-tests/test-config.json`
   - Server path must be: `/node/packages/webpods/dist/index.js`

## Next Steps (In Priority Order)

### 1. Fix Server Startup Detection
```typescript
// In CliTestServer.ts, the checkStartup function needs to properly handle the log format
// Current issue: The message includes timestamp and log level prefix
// Solution: Check if message.includes("WebPods server started") regardless of prefix
```

### 2. Fix Log Level Configuration
```typescript
// Ensure CliTestServer uses LOG_LEVEL: "info" (not "error")
// This is required for the startup message to appear
```

### 3. Fix Database Connection Duplication
```typescript
// Use global setup/teardown hooks in mocha
// Create database once in setupCliTests()
// Avoid multiple TestDatabase instances
```

### 4. Complete Test Execution
- Once server starts properly, auth tests should pass
- Then move on to pod management tests
- Ensure all tests pass without modifying server code

## Test Commands

```bash
# Run all CLI tests
cd /home/jeswin/repos/webpods-org/webpods/node/packages/webpods-cli-tests
npm test

# Run specific test
npm test -- --grep "should show login instructions"

# Debug server startup
node test-server-startup.mjs

# Build everything first (from root)
cd /home/jeswin/repos/webpods-org/webpods
./build.sh
```

## Important Constraints

1. **DO NOT MODIFY**:
   - The main server code in `/node/packages/webpods/`
   - The integration tests in `/node/packages/webpods-integration-tests/`
   - The TestServer class in `/node/packages/webpods-test-utils/`

2. **CLI Tests Must Be Independent**:
   - Use different port (3456 vs 3000)
   - Use different database (webpodsdb_cli_test vs webpodsdb_test)
   - Use own test server instance (CliTestServer)

## Environment Variables

### Required for CLI Tests
```
NODE_ENV=test
WEBPODS_TEST_MODE=enabled
WEBPODS_CONFIG_PATH=/path/to/test-config.json
WEBPODS_PORT=3456
WEBPODS_DB_NAME=webpodsdb_cli_test
WEBPODS_DB_HOST=localhost
WEBPODS_DB_PORT=5432
WEBPODS_DB_USER=postgres
WEBPODS_DB_PASSWORD=postgres
JWT_SECRET=test-secret-key
SESSION_SECRET=test-session-secret
PORT=3456
LOG_LEVEL=info  # Must be info or lower for startup detection
DOMAIN=localhost
CLI_SILENT=true  # For suppressing CLI output during tests
```

## Current Test Output

```
WebPods CLI Authentication Tests
    1) "before all" hook: setupCliTests in "WebPods CLI Authentication Tests"

  0 passing (10s)
  1 failing

  1) WebPods CLI Authentication Tests
       "before all" hook: setupCliTests in "WebPods CLI Authentication Tests":
     Error: Server startup timeout
```

## Solution Path

The immediate fix needed is in `/node/packages/webpods-cli-tests/src/cli-test-server.ts`:

1. Change LOG_LEVEL from "error" to "info" 
2. Ensure the checkStartup function properly detects the startup message with its log prefix
3. Consider increasing the timeout or adding more detailed logging

Once the server starts properly in tests, the authentication tests should pass, allowing progression to the pod management tests.

## Git Status

- Modified eslint.config.js (unrelated to CLI tests)
- All CLI test changes are in the webpods-cli-tests package
- Changes to webpods-cli are minimal (just logger silent mode support)

## Final Goal

All CLI tests must pass, demonstrating that the CLI can:
1. Authenticate users via JWT tokens
2. Create and manage pods
3. Handle errors appropriately
4. Work in isolation from the main integration test suite